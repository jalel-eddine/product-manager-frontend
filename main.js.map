{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/categorie/categorie.component.css","webpack:///./src/app/categorie/categorie.component.html","webpack:///./src/app/categorie/categorie.component.ts","webpack:///./src/app/categories/categories.component.css","webpack:///./src/app/categories/categories.component.html","webpack:///./src/app/categories/categories.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/produit/produit.component.css","webpack:///./src/app/produit/produit.component.html","webpack:///./src/app/produit/produit.component.ts","webpack:///./src/app/produits/produits.component.css","webpack:///./src/app/produits/produits.component.html","webpack:///./src/app/produits/produits.component.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/catesgorie.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { CategorieComponent } from './categorie/categorie.component';\n\nconst routes: Routes = [\n  { \n    path: '',\n    redirectTo:'categories',\n    pathMatch: 'full'\n  },{ \n    path: 'login',\n    component:LoginComponent\n  },{ \n    path: 'categories',\n    component:CategoriesComponent\n  },{ \n    path: 'categorie/:id', \n    component:CategorieComponent\n  },{ \n    path: 'categorie',  \n    component:CategorieComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n\\n<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" routerLink= \\\"/categories\\\">Categories <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n\\n     \\n        <li class=\\\"nav-item\\\">\\n           <a class=\\\"nav-link\\\" routerLink= \\\"/categorie\\\">Categorie</a>\\n        </li>\\n     \\n      \\n      <!--\\n          <li class=\\\"nav-item\\\">\\n             <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\n          </li>\\n      -->\\n      \\n    </ul>\\n    \\n      <li class=\\\"nav-item form-inline my-2 my-lg-0\\\">\\n        <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"button\\\" routerLink=\\\"/login\\\">Login</button>\\n      </li>\\n   \\n    \\n  </div>\\n</nav> \\n\\n\\n<router-outlet>    \\n</router-outlet> \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'front-end-app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { CategorieComponent } from './categorie/categorie.component';\nimport { CategorieService } from './services/catesgorie.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AuthenticationService } from './services/auth.service';\nimport { ProduitsComponent } from './produits/produits.component';\nimport { ProduitComponent } from './produit/produit.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    CategoriesComponent,\n    CategorieComponent,\n    ProduitsComponent,\n    ProduitComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule ,\n    HttpClientModule ,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [ \n    CategorieService ,\n    AuthenticationService\n   ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZS9jYXRlZ29yaWUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p></p>\\r\\n\\r\\n<div class=\\\" container-fluid login-register outer-div col-md-4 border\\\"   > \\r\\n\\r\\n    <div class=\\\"card-header\\\"> Categorie\\r\\n           \\r\\n    </div >\\r\\n    <div class=\\\"card-body\\\">\\r\\n            <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSaveCat(f.value)\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"idCategorie\\\">ID Categorie :  </label> <br>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\"  name=\\\"idCategorie\\\" [(ngModel)]=\\\"cate.idCategorie\\\">  \\r\\n                 \\r\\n                <!-- <label for=\\\"idCategorie\\\"> {{cate.idCategorie}} </label>  -->\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                <label >Nom Categorie</label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\"  name=\\\"nomCategorie\\\" [(ngModel)]=\\\"cate.nomCategorie\\\" >   <!--  [ngModelOptions]=\\\"{standalone: true}\\\" -->\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"nomImageCategorie\\\">Nom Image Categorie</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"nomImageCategorie\\\" name=\\\"nomImageCategorie\\\" [(ngModel)]=\\\"cate.nomImageCategorie\\\" > <!-- [(ngModel)]=\\\"cate.nomImageCategorie\\\" [ngModelOptions]=\\\"{standalone: true}\\\" name=\\\"nomImageCategorie\\\" -->\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <label for=\\\"typeCategorie\\\">Type Categorie</label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"typeCategorie\\\" name=\\\"typeCategorie\\\" [(ngModel)]=\\\"cate.typeCategorie\\\" > <!-- [(ngModel)]=\\\"cate.typeCategorie\\\" [ngModelOptions]=\\\"{standalone: true}\\\" name=\\\"typeCategorie\\\" -->\\r\\n                </div>\\r\\n\\r\\n                <button type=\\\"submit\\\" [disabled]=\\\"!f.valid\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n            </form>\\r\\n    </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CategorieService } from '../services/catesgorie.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Categorie } from '../models/categorie';\n\n@Component({\n  selector: 'app-categorie',\n  templateUrl: './categorie.component.html',\n  styleUrls: ['./categorie.component.css']\n})\nexport class CategorieComponent implements OnInit {\n\ncate;\nid ;\nc:Categorie ;\n\n  constructor(private http:HttpClient , \n    private catService:CategorieService , \n    private route:ActivatedRoute ) {\n\n    }\n\n\n  ngOnInit() {\n\n      this.id = this.route.snapshot.params['id'];\n      this.catService.editCat(this.id)\n      .subscribe(data =>{\n        this.cate = data ;\n        //console.log(\"---------------------------------------------\") ;\n        console.log(this.cate) ;\n      } ,err =>{\n        console.log(err) ;\n      })  ;\n  }\n\n  onSaveCat(cate){\n\n    this.catService.saveCat(cate)\n    .subscribe(resp =>{\n      cate = resp ;\n    } ,err =>{\n      console.log(err) ;\n    })  ; \n  \n   \n  }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhdGVnb3JpZXMvY2F0ZWdvcmllcy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\" style=\\\"padding-top:5% ;\\\">\\n  <div class=\\\"card\\\" >\\n      <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">List des categories</h5>\\n  <table class=\\\"table table-striped\\\">\\n      <thead class=\\\"thead-dark \\\">\\n        <tr>\\n          <th scope=\\\"col\\\">ID</th>\\n          <th scope=\\\"col\\\">nomCategorie</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">nomImageCategorie</th>\\n        \\n        </tr>\\n      </thead>\\n      <tbody>\\n        <tr id=\\\"Categorie\\\" *ngFor=\\\"let lc of listCategories \\\">  \\n          <td >{{lc.idCategori}}</td>\\n          <td>{{lc.nomCategorie}}</td>\\n          <td>{{lc.description}}</td>\\n          <td>{{lc.nomImageCategorie}}</td>\\n        \\n \\n          <td>\\n            <button *ngIf=\\\"isAdmin()\\\" type=\\\"submit\\\" (click)=\\\"onEdite(lc.idCategori)\\\" class=\\\"btn btn-primary\\\">Editer</button>\\n          </td>\\n          \\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CategorieService } from '../services/catesgorie.service';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/auth.service';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n\n  listCategories ;\n  private roles:Array<any> ;\n\n  constructor(private http:HttpClient , \n              private catService:CategorieService , \n              public authService:AuthenticationService ,\n              private router:Router) { \n\n              }\n\n              \n  ngOnInit() {\n\n    this.catService.listeCat() \n    .subscribe(data =>{\n      this.listCategories = data ; \n    } ,err =>{\n      this.authService.logout() ;\n      this.router.navigateByUrl('/login') ;\n      console.log(err) ;\n    }) ;\n\n  }\n\n  onEdite(id:number){\n    this.router.navigateByUrl('/categorie/'+id) ;\n    console.log('-------------------------------' + id)\n  }\n\n\n  isAdmin() : boolean{\n    return this.authService.isAdmin() ;\n  }\n\n}\n  ","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p></p>\\n\\n<div class=\\\" container-fluid login-register outer-div col-md-4 border\\\" > \\n\\n  <div class=\\\"card-body\\\">\\n\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"mode==1\\\">\\n          <strong>Bad credentiel ! </strong>invalid username or password\\n      </div>\\n\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onLogin(f.value)\\\"  >   \\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleInputEmail1\\\">username</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"usernamelogin\\\"  placeholder=\\\"username\\\" ngModel name=\\\"username\\\">\\n\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"exampleInputPassword1\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Password\\\" ngModel name=\\\"password\\\">\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">log In</button>\\n  </form>\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthenticationService } from '../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  mode:number = 0 ;\n  constructor(private authService:AuthenticationService, private router:Router) { }\n\n  ngOnInit() {\n  }\n\n\n  onLogin(user){\n;\n     this.authService.login(user)\n     \n     .subscribe(resp=>{\n       \n         let jwt=resp.headers.get('Authorization');\n         console.log(\"***********************************\");\n         console.log(jwt);\n         console.log(\"***********************************\");\n         this.authService.saveToken(jwt);\n         this.router.navigateByUrl('/categories')\n     } , err=>{\n       this.mode=1;\n     })\n \n \n   }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1aXQvcHJvZHVpdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  produit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-produit',\n  templateUrl: './produit.component.html',\n  styleUrls: ['./produit.component.css']\n})\nexport class ProduitComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1aXRzL3Byb2R1aXRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  produits works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-produits',\n  templateUrl: './produits.component.html',\n  styleUrls: ['./produits.component.css']\n})\nexport class ProduitsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { JwtHelper } from \"angular2-jwt\";\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  private host:string= \"http://localhost:9000\" ;\r\n  private jwtToken ;\r\n  private roles:Array<any> ;\r\n  public username:string ;\r\n  \r\n  constructor(private http:HttpClient){\r\n      \r\n  }\r\n\r\n  login(user){\r\n    return this.http.post(this.host+\"/auth\", user , { observe: \"response\" });\r\n  }\r\n\r\n  saveToken(jwt:string){\r\n    this.jwtToken=jwt;\r\n    localStorage.setItem('token',jwt); \r\n    let jwtHelper= new JwtHelper();\r\n    this.roles=jwtHelper.decodeToken(this.jwtToken).roles; \r\n    this.username=jwtHelper.decodeToken(this.jwtToken).sub;\r\n}\r\n\r\nloadToken(){\r\n    this.jwtToken=localStorage.getItem('token');\r\n  }\r\n\r\n  logout(){\r\n    //this.jwtToken=null;\r\n    localStorage.removeItem('token');\r\n    //localStorage.clear() ;\r\n  }\r\n\r\n  public isAuthenticated(): boolean {\r\n\r\n    this.jwtToken=localStorage.getItem('token');\r\n\r\n    let jwtHelper= new JwtHelper();\r\n    if(this.jwtToken==null) {\r\n      return false \r\n    }\r\n\r\n    return !jwtHelper.isTokenExpired(this.jwtToken);\r\n    }\r\n\r\n    isAdmin(){\r\n      for(let r of this.roles){\r\n         if(r.authority=='ADMIN')\r\n           return true; \r\n      }\r\n      \r\n      return false;\r\n    }\r\n    \r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Categorie } from \"../models/categorie\";\r\nimport { AuthenticationService } from \"./auth.service\";\r\n\r\n\r\n@Injectable()\r\nexport class CategorieService {\r\n\r\n  private host:string= \"http://localhost:9000/api\" ;\r\n  c:Categorie ;\r\n  jwtToken;\r\n\r\n  constructor(private http:HttpClient ){\r\n  }\r\n\r\n  loadToken(){\r\n    this.jwtToken=localStorage.getItem('token');\r\n  }\r\n\r\n  listeCat(){\r\n    \r\n    if(this.jwtToken==null) this.loadToken() ;\r\n      return this.http.get(this.host+'/categories'); \r\n  }\r\n\r\n\r\n editCat(id:number){\r\n   \r\n    return this.http.get(this.host+\"/categories/\"+id ) ;\r\n    \r\n\r\n  } \r\n  \r\n   /*\r\n  chercherProduits(mc:string){\r\n      return this.http.get(this.host+\"/produits/search/by-designation?x=%\"+mc+\"%\")\r\n  }*/\r\n\r\n  saveCat(c){\r\n    \r\n    console.log(\"---------------------------------------------\") ;\r\n      return this.http.post(this.host+'/creatCat' , c , { observe: 'response' } )\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}